---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()
template.name: "애플리케이션을 개발하고 배치 전략을 사용하여 이를 VPC에 배치"
template.description: "이 도구 체인을 사용하여 애플리케이션을 개발하고 IBM Cloud에서 관리하는 VPC 내의 가상 서버 인스턴스(가상 머신)에 이를 배치할 수 있습니다. 이 템플리트는 요구사항의 충족을 위해 Blue-Green, Rolling 등의 선택 가능한 고급 배치 전략을 제공합니다.  기본적으로, 도구 체인은 Java 기반의 샘플 Maven \"Hello World\" 앱을 사용하지만, Java 기반의 고유 Maven 앱을 가져와서 대신 연결할 수도 있습니다. 이 도구 체인은 [Code Risk Analyzer](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-cd-configure-cra-repos), 소스 제어, 문제 추적 및 온라인 편집 기능을 사용하여 지속적 통합, 지속적 딜리버리 및 가져오기 요청을 위한 파이프라인으로 구성되어 있습니다.\n\n\n\n이 도구 체인은 지속적 딜리버리 서비스의 일부인 도구를 사용합니다. 해당 서비스의 인스턴스가 선택된 리소스 그룹이나 조직에 아직 없는 경우, **작성**을 클릭하면 무료 [Lite](/catalog/services/continuous-delivery/) 플랜이 선택된 상태로 인스턴스가 자동으로 추가됩니다.\n\n\n\n시작하려면 **작성**을 클릭하십시오.\n\n단계별 지시사항은 [학습서](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-tutorial-cd-vpc)의 내용을 참고하십시오."
template.gettingStarted: " **도구 체인이 준비되었습니다!**\n\n**빠른 시작:** 새 빌드 파이프라인을 트리거하려면 Git 저장소에 대한 변경사항을 커미트하십시오. 이 파이프라인은 취약성을 스캔한 후 가상 서버에 배치됩니다. 단계별 지시사항은 이 도구 체인에 대한 [학습서](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-tutorial-cd-vpc)를 참조하십시오."
deploy.title: "샘플 Java 기반 애플리케이션을 위한 배치 단계"
deploy.description: "간단한 Java 기반 Maven Hello-world 애플리케이션을 빌드하고 배치하는 도구 체인"
deploy.basic.longDescription: "**Basic 전략**은 최소 인프라 컴포넌트를 사용하고, 단일 가상 서버 인스턴스에 애플리케이션을 배치하며, 사용자 액세스를 위해 유동 IP를 첨부합니다.\n배치할 앱의 이름을 입력하십시오. 새 IBM Cloud API 키를 작성하거나 기존 IBM Cloud API 키를 사용하여 지속적 Delivery Pipeline의 IBM Cloud VPC 인프라를 검색함으로써 VPC 내의 가상 머신으로 빌드된 애플리케이션 바이너리의  배치를 자동화하십시오."
deploy.blueGreen.longDescription: "**Blue-Green 전략**은 2개의 영구 프로덕션 환경(파란색 및 녹색)을 활용하며, 임의의 시점에 오직 하나만 트래픽만 수신합니다. 유휴 환경에 새 릴리스를 배치한 후 중단 시간 없이 모든 트래픽을 이로 전환합니다. 빠른 롤백을 위해 변경되지 않은 다른 환경으로 모든 트래픽을 다시 전환하면 됩니다. [자세히 보기](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-tutorial-cd-vpc).\n\n배치하려는 앱의 이름을 입력하십시오. 새 IBM Cloud API 키를 작성하거나 기존 IBM Cloud API 키를 사용하여 지속적 Delivery Pipeline의 IBM Cloud VPC 인프라를 검색함으로써 VPC 내의 가상 머신으로 빌드된 애플리케이션 바이너리의  배치를 자동화하십시오."
deploy.rolling.longDescription: "**Rolling 전략**은 신속하게 모든 인스턴스를 증분 방식으로 업데이트하여 중단 시간 없이 새 릴리스를 배치합니다. 롤백을 수행하려면 이전 릴리스를 다시 배치해야 하며, 즉시 처리되지 않을 수 있습니다. [자세히 보기](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-tutorial-cd-vpc).\n\n배치하려는 앱의 이름을 입력하십시오. 새 IBM Cloud API 키를 작성하거나 기존 IBM Cloud API 키를 사용하여 지속적 Delivery Pipeline의 IBM Cloud VPC 인프라를 검색함으로써 VPC 내의 가상 머신으로 빌드된 애플리케이션 바이너리의  배치를 자동화하십시오."
deploy.canary.longDescription: "**Canary 전략**은 중단 시간 없이 원래 프로덕션 환경과 병렬로 새 릴리스를 배치한 후 해체 가능한 원래 환경을 대체할 때까지 점진적으로 더 많은 트래픽을 이에 라우트합니다. 점진적 롤아웃을 수행하는 동안 빠른 롤백을 위해 원래 프로덕션 환경으로 모든 트래픽을 다시 라우팅할 수 있습니다. [자세히 보기](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-tutorial-cd-vpc).\n\n배치하려는 앱의 이름을 입력하십시오. 새 IBM Cloud API 키를 작성하거나 기존 IBM Cloud API 키를 사용하여 지속적 Delivery Pipeline의 IBM Cloud VPC 인프라를 검색함으로써 VPC 내의 가상 머신으로 빌드된 애플리케이션 바이너리의  배치를 자동화하십시오."
deploy.appDescription: "배치할 앱의 이름을 입력하십시오."
deploy.appName: "앱 이름"
deploy.apikeyDescription: "IBM Cloud API 키는 IBM Cloud Kubernetes Service API에 액세스하고 클러스터와 상호작용하는 데 사용됩니다. [IBM Cloud 콘솔](https://cloud.ibm.com/iam/apikeys)을 사용하거나 ibmcloud [iam api-key-create](https://cloud.ibm.com/docs/cli?topic=cli-ibmcloud_commands_iam#ibmcloud_iam_api_key_create) 명령을 사용하여 API를 작성할 수 있습니다. "
deploy.registryRegionDescription: "이미지 레지스트리의 IBM Cloud 지역"
deploy.registrynsDescription: "컨테이너 이미지 레지스트리의 네임스페이스입니다. {bx cr namespace-add]로 설정할 수 있습니다. 자세한 사항은 https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started에서 확인하십시오."
deploy.regionDescription: "배치하려는 k8s 머신을 호스팅하는 IBM Cloud 지역입니다."
deploy.rgDescription: "배치하려는 k8s 머신을 호스팅하는 IBM Cloud 리소스 그룹입니다."
deploy.clusterNameDescription: "k8s 클러스터의 이름입니다. [ibmcloud cs clusters] cmd를 사용하거나 https://cloud.ibm.com/kubernetes/clusters에서 콘솔을 통해 검색하십시오."
deploy.namespaceDescription: "Kubernetes 네임스페이스"
deploy.apikey: "IBM Cloud API 키"
deploy.vsiRegionTitle: "가상 프라이빗 클라우드 지역"
deploy.vsiRegionPlaceHolder: "us-south"
deploy.vsiNameTitle: "가상 프라이빗 클라우드 이름"
deploy.vsiNamePlaceHolder: "vpc"
deploy.vsi: "가상 서버 인스턴스"
deploy.vpc: "**VPC 세부사항**\n\nVPC(Virtual Private Cloud)는 애플리케이션 워크로드를 실행하기 위한 가상 서버 인스턴스가 있는 안전하고 격리된 가상 네트워크입니다. 선택된 배치 전략에 대해 IBM Cloud Schematics Terraform 템플리트를 사용하여 프로비저닝된 대상 VPC를 선택하십시오. [자세히 보기](https://cloud.ibm.com/docs/vpc?topic=vpc-getting-started)\n\n"
deploy.bastionHost: "**Bastion 호스트 세부사항**\n\nBastion 호스트는 VPC 내의 가상 서버 인스턴스에서 애플리케이션의 배치를 수행하는 작업자 가상 서버 인스턴스입니다. IBM Cloud Schematics Terraform 템플리트에 의해 bastion 호스트로 프로비저닝된 가상 서버 인스턴스를 선택하십시오. [자세히 보기](https://cloud.ibm.com/docs/solution-tutorials?topic=solution-tutorials-vpc-secure-management-bastion-server)\n\n"
deploy.loadBalancer: "**로드 밸랜서 세부사항**\n\n로드 밸랜서는 VPC의 동일 지역 내의 여러 가상 서버 인스턴스 간에 트래픽을 분배할 수 있도록 허용합니다. IBM Cloud Schematics Terraform 템플리트에 의해 프로비저닝된 백엔드 풀 및 로드 밸런서를 선택하십시오. [자세히 보기](https://cloud.ibm.com/docs/vpc?topic=vpc-load-balancers)\n\n"
deploy.instanceGroups: "**인스턴스 그룹 세부사항**\n\n인스턴스 그룹은 가상 서버 인스턴스의 콜렉션입니다. Canary 롤아웃에서는 2개의 인스턴스 그룹이 필요합니다. IBM Cloud Schematics Terraform 템플리트에 의해 프로비저닝된 인스턴스 그룹을 선택하십시오. [자세히 보기](https://cloud.ibm.com/docs/vpc?topic=vpc-creating-auto-scale-instance-group&interface=ui#creating-instance-group)\n\n"
deploy.canary: "**Canary 세부사항**\n\nCanary 롤아웃은 사용자 요청을 가상 서버 인스턴스에 배치된 애플리케이션의 새 버전으로 점차적으로 전환합니다. 각 증분에 대한 트래픽 증분 크기와 간격을 선택하십시오. [자세히 보기](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-tutorial-cd-vpc)\n\n"
deploy.vsiLabel: "목록에서 Virtual Server 인스턴스를 선택하십시오. 텍스트 상자가 비어 있는 경우 [VSI(Virtual Server Instance)](https://cloud.ibm.com/docs/vpc?topic=vpc-creating-a-vpc-using-the-ibm-cloud-console)를 작성하고 페이지를 새로 고치십시오."
deploy.vsiRegionLabel: "VSI(Virtual Server Instance)가 프로비저닝되는 IBM Cloud 지역을 선택하십시오. 텍스트 상자가 비어 있는 경우 [VSI(Virtual Server Instance)](https://cloud.ibm.com/docs/vpc?topic=vpc-creating-a-vpc-using-the-ibm-cloud-console)를 작성하고 페이지를 새로 고치십시오."
deploy.vsiUserName: "VSI 인스턴스에 로그인하기 위한 사용자 이름을 제공하십시오."
deploy.vsiSshKey: "VSI 인스턴스에 로그인하기 위한 개인 키를 제공하십시오."
deploy.vsiUserPassword: "VSI 인스턴스에 로그인하기 위한 비밀번호를 제공하십시오."
deploy.vsiDescription: "VSI(Virtual Server Instance) IP 주소 선택"
deploy.vsiAuthType: "인증 유형을 선택하십시오. 도구 체인이 선택한 VSI(Virtual Server Instance)에서 애플리케이션을 배치하고 시작하는 데 필요합니다. SSH 키를 사용하려는 경우 base64 인코딩된 개인 SSH 키를 제공하고, 로그인 인증 정보를 사용하려는 경우에는 VSI(Virtual Server Instance)의 사용자 이름 및 비밀번호를 제공하십시오."
deploy.rg: "리소스 그룹"
deploy.vsiPlaceHolder: "bastion-host"
deploy.regionPlaceHolder: "us-south-1"
deploy.artifactoryToken: "Artifactory 사용자 토큰"
deploy.userCredentials: "사용자 인증 정보"
deploy.userSSH: "사용자 SSH 키"
deploy.userCredentialsDescription: "도구 체인에 대한 SSH 사용자 이름 및 비밀번호를 제공하여 Virtual Server 인스턴스에 대한 SSH 로그인을 수행하고 애플리케이션을 배치하십시오."
deploy.userSSHDescription: "도구 체인에 대한 SSH 사용자 이름 및 키를 제공하여 Virtual Server 인스턴스에 대한 SSH 로그인을 수행하고 애플리케이션을 배치하십시오."
deploy.usernameVirtualServer: "VSI(Virtual Server Instance)에 대한 사용자 이름"
deploy.passwordVirtualServer: "VSI(Virtual Server Instance)에 대한 비밀번호"
deploy.authType: "인증 유형"
deploy.userName: "사용자 이름"
deploy.hostSshKeys: "SSH 키 파일의 컨텐츠"
cos.title: "Cloud Object Storage"
cos.description: "Cloud Object Storage 통합에 대한 정보입니다."
cos.bucketNameDescription: "Cloud Object Storage 인스턴스의 버킷 이름입니다. 파이프라인에서 생성한 아티팩트 및 증거를 저장하기 위한 라커로 사용됩니다."
cos.apiKeyDescription: "COS 버킷에 쓰기 위해 파이프라인에서 사용하는 서비스 API 키입니다."
cos.apiKeyTitle: "서비스 ID API 키"
cos.about: "Cloud Object Storage는 파이프라인에서 생성한 아티팩트를 저장하는 데 사용됩니다. \n\nCOS 인스턴스가 여러 개인 경우 사용하려는 버킷의 이름을 지정하십시오. 그렇지 않으면 새 버킷의 새 인스턴스가 아래 지정된 이름으로 작성됩니다."
cos.bucketName: "Cloud Object Storage 인스턴스의 버킷 이름"
cos.serviceApikey: "Cloud Object Storage 인스턴스에 쓸 서비스 API 키"
organization: "조직"
space: "영역"
prodStage: "프로덕션 환경"
headerSVG.prPipeline: "PR Pipeline"
headerSVG.cra: "CRA"
headerSVG.devopsInsights: "DevOps Insights"
headerSVG.ciPipeline: "CI Pipeline"
headerSVG.cdPipeline: "CD Pipeline"
headerSVG.inventory: "재고"
headerSVG.issue: "문제"
headerSVG.tracker: "추적 프로그램"
headerSVG.app: "애플리케이션"
headerSVG.repo: "저장소"
headerSVG.cloud2: "Cloud"
headerSVG.object: "Object"
headerSVG.storage: "Storage"
headerSVG.coderisk: "Code Risk"
headerSVG.analyzer: "Analyzer"
headerSVG.devops: "DevOps"
headerSVG.insights: "Insights"
headerSVG.vsi: "VSI"
headerSVG.virtual: "가상"
headerSVG.private: "개인용"
headerSVG.cloud: "Cloud"
headerSVG.cloudobjectstorage: "Cloud Object Storage"
headerSVG.keyProtect: "Key Protect"
headerSVG.artifactory: "Artifactory"
headerSVG.cos: "COS"
wizard.welcome.description: "이 도구 체인을 사용하여 애플리케이션을 개발하고 IBM Cloud에서 관리하는 VPC 내의 가상 서버 인스턴스(가상 머신)에 이를 안전하게 배치할 수 있습니다. 기본적으로, 도구 체인은 샘플 Java \"Hello World\" 앱을 사용하지만, 고유 앱을 가져와서 대신 연결할 수도 있습니다."
wizard.sourceHost: "소스 제공자"
wizard.step.application.title: "애플리케이션"
wizard.step.inventory.title: "인벤토리"
wizard.step.inventory.label: "인벤토리"
wizard.inventory.title: "인벤토리 저장소"
wizard.inventory.longDescription: "인벤토리 저장소는 CI 파이프라인에서 빌드한 아티팩트의 세부사항을 기록합니다.\n\n[인벤토리 저장소 템플리트](https://us-south.git.cloud.ibm.com/open-toolchain/compliance-inventory)의 복제본이 될 인벤토리 저장소를 새로 작성하거나 도구 체인 간에 공유 중인 기존 인벤토리 저장소를 사용하도록 선택할 수 있습니다.\n기본적으로, 인벤토리 저장소 템플리트는 Git 저장소 및 문제 추적 조직으로 복제됩니다. 조직을 변경하려면, **고급 옵션**을 사용으로 설정하고 **저장소 소유자** 필드를 편집하십시오."
wizard.inventory.info: "인벤토리에 대한 자세한 정보는 [문서]()를 참조하십시오."
wizard.inventory.clone: "새 인벤토리 저장소 작성"
wizard.inventory.link: "기존 인벤토리 저장소 사용"
wizard.inventory.repoNamePlaceholder: "compliance-inventory-XXXXXXXXXX"
wizard.inventory.repoURLPlaceholder: "https://us-south.git.cloud.ibm.com/user-id/compliance-inventory-XXXXXXXXXX"
wizard.step.vault.title: "시크릿"
wizard.step.keyprotect.title: "Key Protect"
wizard.step.secretsmanager.title: "Secrets Manager"
wizard.step.hashicorpvault.title: "HashiCorp Vault"
wizard.step.deploy.label: "배치 대상"
wizard.step.deploy.title: "배치 대상"
wizard.step.deploy.blueGreen.label: "Blue Green 배치"
wizard.step.deploy.blueGreentitle: "Blue Green의 배치 대상"
wizard.step.optionaltools.title: "선택적 도구"
wizard.step.summary.title: "요약"
wizard.app.title: "애플리케이션 저장소"
wizard.app.longDescription: "애플리케이션 저장소는 CI 파이프라인이  빌드, 테스트하고 VPC 내의 가상 머신 인스턴스에 배치하는 프로젝트 또는 서비스 소스 코드입니다.\n\n시작하는 데 도움이 되도록, 도구 체인은 [샘플 Java Spring 앱](https://us-south.git.cloud.ibm.com/open-toolchain/java-spring-app)을 제공합니다. 샘플 Java Spring 앱 대신에 기존 애플리케이션을 사용하려면, \"자체 애플리케이션 가져오기\"를 선택하고 종료 애플리케이션 URL을 선택하십시오.\n\n기본적으로, 애플리케이션 저장소 템플리트는 Git 저장소 및 문제 추적 조직으로 복제됩니다. 조직을 변경하려면, **고급 옵션**을 사용으로 설정하고 **저장소 소유자** 필드를 편집하십시오."
wizard.app.clone: "기본 샘플 애플리케이션 사용"
wizard.app.link: "고유 애플리케이션 가져오기"
wizard.app.repoURLPlaceholder: "https://us-south.git.cloud.ibm.com/user-id/compliance-app-XXXXXXXXXX"
wizard.app.repoNamePlaceholder: "compliance-app-XXXXXXXXXX"
wizard.repo.invalidOptionMsg: "지원되지 않는 구성 옵션을 선택했습니다. **고급 옵션**을 사용으로 설정하십시오."
wizard.summary.title: "요약"
wizard.summary.success.title: "축하합니다!"
wizard.summary.success.subtitle: "도구 체인 구성을 완료했습니다. 아래의 '작성' 단추를 클릭하여 선택한 도구 및 설정으로 도구 체인을 작성하십시오."
wizard.vault.title: "시크릿 관리"
wizard.vault.longDescription: "이 도구 체인의 일부 도구는 권한 있는 리소스에 액세스하는 데 시크릿이 필요합니다. IBM Cloud API 키는 이러한 시크릿의 예입니다. 모든 시크릿은 시크릿 저장에 안전하게 저장한 다음 도구 체인에서 요구하는 대로 참조해야 합니다."
wizard.vault.keyProtect.title: "Key Protect"
wizard.vault.keyProtect.description: "Key Protect는 IBM Cloud 서비스 또는 고객이 빌드한 애플리케이션에서 사용되는 암호화 키의 라이프사이클 관리를 제공하는 클라우드 기반의 보안 서비스입니다."
wizard.vault.secretsManager.title: "Secrets Manager"
wizard.vault.secretsManager.description: "Secrets Manager를 사용하면 IBM Cloud 서비스 또는 사용자 정의 애플리케이션에서 사용되는 시크릿을 작성, 임대 및 중앙에서 관리할 수 있습니다."
wizard.vault.hashicorp.title: "HashiCorp Vault"
wizard.vault.notification.title: "시크릿 저장소"
wizard.vault.notification.sutitle: "우수 사례로서 다음 도구 중 하나에 시크릿을 저장하십시오."
wizard.vault.hashicorp.description: "HashiCorp Vault는 프로그래밍 방식의 액세스를 통해 사용자와 머신 모두에 대한 시스템 액세스를 중개하는 시크릿 관리 솔루션입니다."
wizard.vault.info: "사용자의 시크릿을 포함하는 시크릿 제공자를 식별하십시오."
wizard.optional.tools.title: "기타 도구"
wizard.optional.tools.longDescription: "도구 체인에 포함될 수 있는 선택적 도구입니다."
wizard.optional.tools.doi.title: "DevOps Insights(필요한 구성 없음)"
wizard.optional.tools.doi.description: "DevOps Insights는 많이 사용되는 지속적 통합 및 지속적 딜리버리 도구에서 포괄적인 인사이트를 제공하여 애플리케이션 딜리버리의 속도 및 제어 기능을 개선합니다."
wizard.optional.tools.cos.title: "Cloud Object Storage"
wizard.optional.tools.cos.description: "Cloud Object Storage 통합에 대한 정보입니다."
wizard.optional.tools.artifactory.title: "Artifactory"
wizard.deployment_strategy.title: "배치 전략"
wizard.deploymentStrategy.longDescription: "도구 체인은 빌드된 애플리케이션 아티팩트를 IBM Cloud에서 관리하는 VPC 내의 가상 서버 인스턴스(가상 머신)에 배치하기 위해 지속적 배치 파이프라인을 작성합니다. Basic, Rolling, Blue-Green 또는 Canary의 배치 전략 중 하나를 선택하십시오."
wizard.deploymentStrategy.text: "애플리케이션에 적합한 배치 전략 선택"
wizard.deploymentStrategy.warning.title: "VPC 인프라"
wizard.deploymentStrategy.warning.subtitle: "Basic 배치 전략의 경우, VPC 인스턴스를 사용할 수 있습니다. 자세한 정보는 이 [링크](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-tutorial-cd-vpc)를 참조하십시오. 기타 배치 전략의 경우, 해당 링크를 따라 IBM Cloud Schematics의 사용으로 필수 인스턴스를 설정하십시오."
wizard.deploymentStrategy.rolling.title: "**Rolling**\n순차 방식으로 모든 인스턴스를 증분식으로 업데이트하여 중단 시간 없이 새 릴리스를 배치합니다.\n\nRolling 배치의 경우 [VPC 인프라 작성]({{form.deployment_strategy.parameters.rolling_terraform}})을 실행합니다."
wizard.deploymentStrategy.blueGreen.title: "**Blue-Green**\n보다 빠른 롤백과 테스트 용이성을 위해 현재 프로덕션과 동일하고 격리된 환경에 새 릴리스를 배치합니다.\n\nBlue-Green 배치의 경우 [VPC 인프라 작성]({{form.deployment_strategy.parameters.blue_green_terraform}})을 실행합니다."
wizard.deploymentStrategy.canary.title: "**Canary**\n새 릴리스를 증분식으로 프로덕션 환경에 배치하면, 점진적으로 애플리케이션의 이전 버전을 신규 버전으로 대체하여 위험을 줄일 수 있습니다.\n\nCanary 배치의 경우 [VPC 인프라 작성]({{form.deployment_strategy.parameters.canary_terraform}})을 실행합니다."
wizard.deploymentStrategy.basic.title: "**Basic**\n실행 중인 인스턴스를 중지하고 업데이트하여 새 릴리스를 배치합니다."
wizard.step.deploymentStrategy.title: "배치 전략"
deploy.vpcRegionTitle: "가상 프라이빗 클라우드 지역"
deploy.bastion: "Bastion 호스트"
deploy.bastionLabel: "목록에서 배스천 서버 인스턴스를 선택하십시오. 텍스트 상자가 비어 있는 경우 [VSI(Virtual Server Instance)](https://cloud.ibm.com/docs/vpc?topic=vpc-creating-a-vpc-using-the-ibm-cloud-console)를 작성하고 페이지를 새로 고치십시오."
deploy.vpcRegionLabel: "VPC가 프로비저닝된 IBM Cloud 지역을 선택하십시오. 텍스트 상자가 비어 있는 경우 [VSI(Virtual Server Instance)](https://cloud.ibm.com/docs/vpc?topic=vpc-creating-a-vpc-using-the-ibm-cloud-console)를 작성하고 페이지를 새로 고치십시오."
deploy.loadBalancerName: "로드 밸런서 이름"
deploy.bluePoolName: "파란색 백엔드 풀 이름"
deploy.poolName: "백엔드 풀 이름"
deploy.greenPoolName: "녹색 백엔드 풀 이름"
deploy.loadBalancerPlaceHolder: "load-balancer-name"
deploy.bluePoolNamePlaceHolder: "blue-backend-pool-name"
deploy.greenPoolNamePlaceHolder: "green-backend-pool-name"
deploy.poolNamePlaceHolder: "backend-pool-name"
deploy.bastionUsernameVirtualServer: "VPC 인스턴스의 사용자 이름"
deploy.bastionSshVirtualServer: "VPC 인스턴스를 위한 Base64 인코딩 SSH 키"
deploy.bastionUsernamePlaceHolder: "사용자 이름"
deploy.bastionSshVirtualServerPlaceHolder: "base64-encoded-private-SSH-key"
deploy.poolUsernameVirtualServer: "백엔드 풀의 멤버에 대한 사용자 이름"
deploy.poolSshVirtualServer: "백엔드 풀의 멤버에 대한 SSH 키"
wizard.storage.title: "아티팩트 스토리지"
wizard.storage.longDescription: "아티팩트 스토리지를 사용하면 CD-파이프라인에 빌드 앱을 저장하고 CD-파이프라인에 가져올 수 있습니다."
wizard.storage.text: "애플리케이션의 스토리지 도구를 식별하십시오."
wizard.storage.note: "CI 및 CD 파이프라인의 환경 특성에서 선택한 스토리지를 변경할 수 있습니다. Cloud Object Storage로 변경하려면 COS 버킷 이름과 버킷 지역을 추가하고, Artifactory의 경우 도구 체인에 Artifactory 타일을 추가하고 CI 및 CD 파이프라인 모두에서 Artifactory env를 업데이트하십시오."
wizard.step.storage.title: "아티팩트 스토리지"
deploy.canaryStepInterval: "Canary 단계 간격"
deploy.canaryStepSize: "Canary 스텝 사이즈"
deploy.canaryStepInterval.title: "Canary 단계 간격(초)"
deploy.canaryStepSize.title: "Canary 단계 크기(% 트래픽 증분)"
deploy.instanceGroup1.title: "인스턴스 그룹 - 1"
deploy.instanceGroup1: "인스턴스 그룹 - 1"
deploy.instanceGroup2.title: "인스턴스 그룹 - 2"
deploy.instanceGroup2: "인스턴스 그룹 - 2"
deploy.canaryStepIntervalPlaceHolder: "10"
deploy.canaryStepSizePlaceHolder: "10"
deploy.instanceGroup1PlaceHolder: "instance-group-1"
deploy.instanceGroup2PlaceHolder: "instance-group-2"
wizard.fetcher.warning.title: "참고 "
wizard.fetcher.warning.subtitle: "이전에 선택한 대로 동일한 VPC에 속하는 로드 밸런서, 인스턴스 그룹, bastion 호스트 등의 인프라 요소를 선택하십시오."
deploy.vsiText: "**가상 서버 인스턴스 세부사항**\n 애플리케이션을 배치 및 실행할 계획인 이전에 선택한 VPC에서 가상 서버 인스턴스를 선택하십시오."
wizard.storage.note.title: "참고: "
